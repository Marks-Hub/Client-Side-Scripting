<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mark Okin's Knight Moves </title><!--Mark Okin-->
    <style type="text/css">
        td {
            display: inline-block;
            width: 50px;
            height: 50px;
            border: thin solid black;
        }

        tr:nth-child(even) td:nth-child(even),
        tr:nth-child(odd) td:nth-child(odd) {
            background-color: gray;
        }

        .hasKnight {
            background-image: url(WhiteKnight.png);
            background-repeat: no-repeat;
            background-size: 45px 45px;
        }

        body {
            background-color: bisque;
        }
    </style>
</head>

<body>
    <h1>Mark Okin's Knight Moves</h1>
    <table>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
        </tr>
    </table>
    <script> //Mark Okin
        let cells = document.getElementsByTagName("td");
        let randomIndex = Math.floor(Math.random() * cells.length);
        cells[randomIndex].classList.add("hasKnight");
        for (let i = 0; i < cells.length; i++) {
            cells[i].addEventListener("mouseenter", function () {
                let me = this;
                let myparent = me.parentNode;
                //myparent.style.backgroundColor = "green";
                me.style.backgroundColor = "red";

                //same row
                let index = Array.from(myparent.children).indexOf(me);


                let myparentsparent = myparent.parentNode;
                let parentindex = Array.from(myparentsparent.children).indexOf(myparent);

                if (me.classList.contains("hasKnight")) {
                    //2 row above
                    if (parentindex > 1) {
                        //one to left
                        if (index > 0) {
                            myparentsparent.children[parentindex - 2].children[index - 1].style.backgroundColor = "magenta";
                        }
                        //one to right
                        if (index < myparent.children.length - 1) {
                            myparentsparent.children[parentindex - 2].children[index + 1].style.backgroundColor = "magenta";
                        }
                    }
                    //row above
                    if (parentindex  > 0) {
                    //2 to the left
                    if (index > 1) {
                        myparentsparent.children[parentindex - 1].children[index - 2].style.backgroundColor = "magenta";
                    }
                    //2 to the right
                    if (index < myparent.children.length - 2) {
                        myparentsparent.children[parentindex - 1].children[index + 2].style.backgroundColor = "magenta";
                    }
                }
                
                //row below
                if (parentindex < myparentsparent.children.length - 1) {
                    //down left left
                    if (index > 0) {
                        myparentsparent.children[parentindex + 1].children[index - 2].style.backgroundColor = "magenta";
                    }
                    //down down left
                    if (index > 0) {
                        myparentsparent.children[parentindex + 2].children[index - 1].style.backgroundColor = "magenta";
                    }
                    //down right right
                    if (index < myparent.children.length - 1) {
                        myparentsparent.children[parentindex + 1].children[index + 2].style.backgroundColor = "magenta";
                    }
                    // down down right
                    if (index < myparent.children.length - 1) {
                        myparentsparent.children[parentindex + 2].children[index + 1].style.backgroundColor = "magenta";
                    }
                }
            }

            });
        }
        for (let i = 0; i < cells.length; i++) {
            cells[i].addEventListener("mouseout", function () {
                me = this;
                let myparent = me.parentNode;
                me.style.backgroundColor = "";
                let index = Array.from(myparent.children).indexOf(me);


                let myparentsparent = myparent.parentNode;
                let parentindex = Array.from(myparentsparent.children).indexOf(myparent);

                if (parentindex > 1) {
                        //one to left
                        if (index > 0) {
                            myparentsparent.children[parentindex - 2].children[index - 1].style.backgroundColor = "";
                        }
                        //one to right
                        if (index < myparent.children.length - 1) {
                            myparentsparent.children[parentindex - 2].children[index + 1].style.backgroundColor = "";
                        }
                    }
                    //row above
                    if (parentindex  > 0) {
                    //2 to the left
                    if (index > 1) {
                        myparentsparent.children[parentindex - 1].children[index - 2].style.backgroundColor = "";
                    }
                    //2 to the right
                    if (index < myparent.children.length - 2) {
                        myparentsparent.children[parentindex - 1].children[index + 2].style.backgroundColor = "";
                    }
                }
                if (parentindex < myparentsparent.children.length - 1) {
                    if (index > 0) {
                        myparentsparent.children[parentindex + 1].children[index - 2].style.backgroundColor = "";
                    }
                    if (index > 0) {
                        myparentsparent.children[parentindex + 2].children[index - 1].style.backgroundColor = "";
                    }
                    if (index < myparent.children.length - 1) {
                        myparentsparent.children[parentindex + 1].children[index + 2].style.backgroundColor = "";
                    }
                    if (index < myparent.children.length - 1) {
                        myparentsparent.children[parentindex + 2].children[index + 1].style.backgroundColor = "";
                    }
                }


            });
        }
    </script>
</body>

</html>